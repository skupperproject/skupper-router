

#  <source>
#     @type forward
#     port 24224
#   </source>

# https://docs.fluentd.org/configuration/config-file

<source>
  # https://docs.fluentd.org/input/tail
  @type tail
  path sample.log
  read_from_head true
  #pos_file sample.log.pos
  tag skrouterd
  # https://docs.fluentd.org/configuration/parse-section
  <parse>
    # https://docs.fluentd.org/parser/regexp
    # https://docs.fluentd.org/parser/regexp#how-to-debug-my-regexp-pattern
    @type regexp
    # https://ruby-doc.org/core-2.4.1/Regexp.html
    #expression /^(?<time>[^ ]+ [^ ]+ [^ ]+) (?<component>[^ ]+) \((?<severity>[^ ]+)\) (?<message>.*)$/
    # notice that .*? in message field is lazy capture, but .* would also work here (but not in vector)
    expression /^(?<time>[^ ]+ [^ ]+ [^ ]+) (?<component>[^ ]+) \((?<severity>[^ ]+)\) (?<message>.*?)(?: \((?<source>.*:\d+)\))?$/
    time_key time
    # https://docs.fluentd.org/configuration/parse-section#time-parameters
    time_format %Y-%m-%d %H:%M:%S.%N %z
    types component:string,level:string,message:string,source:string
  </parse>
</source>

<source>
  # https://docs.fluentd.org/input/tail
  @type tail
  path sample_locations.log
  read_from_head true
  #pos_file sample_locations.log.pos
  tag skrouterd
  # https://docs.fluentd.org/configuration/parse-section
  <parse>
    # https://docs.fluentd.org/parser/regexp
    # https://docs.fluentd.org/parser/regexp#how-to-debug-my-regexp-pattern
    @type regexp
    expression /^(?<time>[^ ]+ [^ ]+ [^ ]+) (?<component>[^ ]+) \((?<severity>[^ ]+)\) (?<message>.*) \((?<source>.*:\d+)\)$/
    time_key time
    # https://docs.fluentd.org/configuration/format-section#time-parameters
    time_format %Y-%m-%d %H:%M:%S.%N %z
    types user_id:integer,paid:bool,paid_usd_amount:float
  </parse>
</source>


  <match skrouterd>
    @type file
    path fluent.out
  </match>

# https://docs.fluentd.org/configuration/config-file#embedded-ruby-code